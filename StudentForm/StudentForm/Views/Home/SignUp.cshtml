@{
    ViewBag.Title = "SignUp";
}

@{
    bool CheckGender(string gn)
    {
        if (Model != null && Model.Gender != null && Model.Gender.Equals(gn))
        {
            return true;
        }
        return false;
    }

    bool CheckProfession(string prof)
    {
        if (Model != null && Model.Profession != null && Model.Profession.Equals(prof))
        {
            return true;
        }
        return false;
    }
}

<h2>SignUp</h2>

<form method="post">
    <input type="text" name="Name" class="form-control" value="@(Model != null ? Model.Name : "")" placeholder="Name" required pattern="[A-Za-z ]{1,100}" title="Name can only contain alphabets and spaces (max 100 characters)." />
    <span class="text-danger">@Html.ValidationMessage("Name")</span>

    <input type="text" name="Username" value="@(Model != null ? Model.Username : "")" class="form-control" placeholder="Username" required maxlength="15" pattern="[A-Za-z0-9]+" title="Username must be alphanumeric (max 15 characters)." />
    @Html.ValidationMessage("Username")

    <br>Gender: <input type="radio" checked="@CheckGender("Male")" name="Gender" value="Male" /> Male
    <input type="radio" name="Gender" checked="@CheckGender("Female")" value="Female" /> Female
    <br />@Html.ValidationMessage("Gender")

    <br />Profession:
    <select class="form-control" name="Profession" required>
        <option disabled selected>---Select---</option>
        <option selected="@CheckProfession("Teacher")">Teacher</option>
        <option selected="@CheckProfession("Student")">Student</option>
        <option selected="@CheckProfession("Business")">Business</option>
    </select>
    @Html.ValidationMessage("Profession")

    <br />Dob:
    @{
        bool isUnder20 = Model != null && Model.Dob != null && DateTime.Now.Subtract(Model.Dob).TotalDays < 365 * 20;
    }
    @if (isUnder20)
    {
        <input type="date" name="Dob" value="@Model.Dob?.ToString(" yyyy-MM-dd")" required />
    }
    else
    {
        <input type="date" name="Dob" value="" />
    }
    <br />
    @Html.ValidationMessage("Dob")

    <br />Student ID: <input type="text" name="StudentID" class="form-control" required pattern="[0-9]{2}-[0-9]{5}-[1-3]" title="Invalid student ID format. Correct format: [xx-xxxxx-x] where x can be numbers from 0-9 and the last digit can be 1, 2, or 3." />
    @Html.ValidationMessage("StudentID")

    <input type="submit" class="btn btn-success" />
    </form>
